{"version":3,"sources":["v2files/v2component.js","v1files/v1functions.js","v1files/v1component.js","App.js","serviceWorker.js","index.js"],"names":["RPSUI","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bScore","uScore","bChoice","uChoice","result","e","setState","randomN","Math","random","bot","floor","_this2","_this3","_this4","_this5","_this6","_this7","scoreCheck","win","lose","reset","_this8","react_default","a","createElement","className","type","id","onClick","rock","paper","scissors","href","React","Component","RPSCapsule","clearUScore","document","getElementById","clearBScore","innerHTML","maxScore","RPS","terminator","userChoice","choices","target","i","Number","App","onLoad","version","RPSV1","RPSV2","react_router_dom","v1","to","v2","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_RPSUI","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99a8df8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class RPSUI extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            bScore: 0,\r\n            uScore: 0,\r\n            bChoice: \"\",\r\n            uChoice: \"\",\r\n            result: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    //reset state\r\n    reset(e) {\r\n        this.setState({\r\n            bScore: 0,\r\n            uScore: 0,\r\n            bChoice: \"\",\r\n            uChoice: \"\",\r\n            result: \"\"\r\n        });\r\n\r\n    }\r\n\r\n    //bot choices\r\n    bChoice(e) {\r\n        const randomN = Math.random();//random number generator for the bot\r\n        const arrayIndex = Math.floor(randomN * 3)//times the random number by 3(1 for each option)   \r\n        const range = arrayIndex; //getting the number 0,1,2 for the index for the array\r\n        const choices = ['Rock', 'Paper', 'Scissors']; //the choice array\r\n        const bot = choices[range]; //allocating the index number to the array\r\n        this.setState({ bChoice: bot })//sets the state bChoice to the corresponding choice in the array \r\n    }\r\n\r\n    //user choices\r\n    rock(e) {\r\n        this.setState({\r\n            uChoice: \"Rock\"\r\n        },\r\n            (e) => {\r\n                this.result(e);\r\n            });\r\n    }\r\n    paper(e) {\r\n        this.setState({\r\n            uChoice: \"Paper\"\r\n        },\r\n            (e) => {\r\n                this.result(e);\r\n            });\r\n    }\r\n    scissors(e) {\r\n        this.setState({\r\n            uChoice: \"Scissors\"\r\n        },\r\n            (e) => {\r\n                this.result(e);\r\n            });\r\n    }\r\n\r\n    //win or lose\r\n    win(e) {\r\n        this.setState((uScore) => {\r\n            return { uScore: this.state.uScore + 1 };\r\n        });\r\n    }\r\n    lose(e) {\r\n        this.setState((bScore) => {\r\n            return { bScore: this.state.bScore + 1 };\r\n        });\r\n    }\r\n\r\n    //result if statement\r\n    result(e) {\r\n        //Rock\r\n        if (this.state.uChoice === \"Rock\" && this.state.bChoice === \"Rock\") {\r\n            this.setState({ result: \"Looks like you're stuck between a rock and a hard place, its a draw.\" },\r\n                (e) => { this.scoreCheck(e) })\r\n\r\n        } else if (this.state.uChoice === \"Rock\" && this.state.bChoice === \"Scissors\") {\r\n            this.setState({ result: \"Rock breaks scissors, it's a win!\" },\r\n                (e) => { this.win(e) },\r\n                (e) => { this.scoreCheck(e) })\r\n\r\n        } else if (this.state.uChoice === \"Rock\" && this.state.bChoice === \"Paper\") {\r\n            this.setState({ result: \"Rock gets covered by paper, it's a loss.\" },\r\n                (e) => { this.lose(e) },\r\n                (e) => { this.scoreCheck(e) })\r\n            //Paper\r\n        } else if (this.state.uChoice === \"Paper\" && this.state.bChoice === \"Rock\") {\r\n            this.setState({ result: \"Paper covers rock, it's a win!\" },\r\n                (e) => { this.win(e) },\r\n                (e) => { this.scoreCheck(e) })\r\n\r\n        } else if (this.state.uChoice === \"Paper\" && this.state.bChoice === \"Paper\") {\r\n            this.setState({ result: \"Theres more paper here than an empty office printer, its a draw.\" },\r\n                (e) => { this.scoreCheck(e) })\r\n\r\n        } else if (this.state.uChoice === \"Paper\" && this.state.bChoice === \"Scissors\") {\r\n            this.setState({ result: \"Paper gets cut but scissors, it's a loss.\" },\r\n                (e) => { this.lose(e) },\r\n                (e) => { this.scoreCheck(e) })\r\n            //Scissors\r\n        } else if (this.state.uChoice === \"Scissors\" && this.state.bChoice === \"Rock\") {\r\n            this.setState({ result: \"Scissors just cant cut rock, it's a loss.\" },\r\n                (e) => { this.lose(e) },\r\n                (e) => { this.scoreCheck(e) })\r\n\r\n        } else if (this.state.uChoice === \"Scissors\" && this.state.bChoice === \"Paper\") {\r\n            this.setState({ result: \"Scissors cuts paper, it's a win!\" },\r\n                (e) => { this.win(e) },\r\n                (e) => { this.scoreCheck(e) })\r\n\r\n        } else if (this.state.uChoice === \"Scissors\" && this.state.bChoice === \"Scissors\") {\r\n            this.setState({ result: \"On guard!, tis a draw.\" },\r\n                (e) => { this.scoreCheck(e) })\r\n        }\r\n    }\r\n\r\n    scoreCheck(e) {\r\n        if (this.state.uScore >= 5 || this.state.bScore >= 5) {\r\n            this.reset(e)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            //-------------------------------------------------------\r\n            <div className='content'>\r\n                <button type='button' id=\"startReset\" onClick={(e) => { this.reset(e) }}>Start/Reset</button>\r\n                <button type='button' id=\"rock\" className=\"selection\" onClick={(e) => { this.rock(e); this.bChoice(e) }}>Rock </button>\r\n                <button type='button' id=\"paper\" className=\"selection\" onClick={(e) => { this.paper(e); this.bChoice(e) }}>Paper </button>\r\n                <button type='button' id=\"scissors\" className=\"selection\" onClick={(e) => { this.scissors(e); this.bChoice(e) }}>Scissors </button>\r\n                <div className=\"scoreBoard\">\r\n                    <p>Your Score </p><p id=\"yourScore\">{this.state.uScore} </p>\r\n                    <p> : </p>\r\n                    <p id=\"botScore\"> {this.state.bScore}</p><p> Bot Score</p>\r\n                </div>\r\n                <p>You chose: {this.state.uChoice}</p> <br />\r\n                <p>The Machine chose: {this.state.bChoice} </p> <br />\r\n                <p id=\"result\">The Result is: {this.state.result}</p>\r\n                <p>The code behind the game is <a href=\"https://github.com/PCloherty/rock-paper-scissors\">available here</a>.</p>\r\n            </div>\r\n            //--------------------------------------------------------------\r\n        )\r\n    }\r\n}","//reset scrores\r\nexport function RPSCapsule(){\r\n    let clearUScore = document.getElementById('yourScore')\r\n    let clearBScore = document.getElementById('botScore')\r\n\r\n    // let botScore = document.getElementById('botScore');\r\n    clearUScore.innerHTML = 0;\r\n    clearBScore.innerHTML = 0;\r\n    } \r\n\r\n    function maxScore() {\r\n    let clearUScore = document.getElementById('yourScore')\r\n    let clearBScore = document.getElementById('botScore')\r\n        if (clearUScore.innerHTML >= 5 || \r\n            clearBScore.innerHTML >= 5) {\r\n                RPSCapsule();\r\n    }\r\n    \r\n}\r\n//game\r\nexport function RPS(e) {\r\n    let userChoice = '';\r\n    let terminator = '';\r\n    let choices = ['rock', 'paper', 'scissors'];\r\n \r\n    //bot functions\r\n    //random number generator for the bot\r\n    let randomN = Math.random();\r\n    let range = Math.floor(randomN * 3);\r\n    \r\n    //allocating the index number to the array\r\n    terminator = choices[range];\r\n    \r\n    //printing the option of the bot to the screen\r\n    document.getElementById('machine').innerHTML = terminator;\r\n    \r\n    //User Related functions\r\n    //allocating the index number to the array\r\n    if (e.target === document.getElementById('rock')) {\r\n        userChoice = choices[0];\r\n    } else if (e.target === document.getElementById('paper')) {\r\n        userChoice = choices[1];\r\n    } else if(e.target === document.getElementById('scissors')) {\r\n        userChoice = choices[2];\r\n    };\r\n    //printing the choice of the bot\r\n    document.getElementById('yourChoice').innerHTML = userChoice;\r\n\r\n\r\n    //outcomes of the choice combinations\r\n    let result = document.getElementById('result');\r\n    if (userChoice === 'rock' && terminator === 'rock') {\r\n        result.innerHTML= 'Draw';\r\n    } else if (userChoice === 'rock' && terminator === 'scissors') {\r\n        result.innerHTML= 'rock beats scissors';\r\n        win();\r\n    } else if (userChoice === 'rock' && terminator === 'paper') {\r\n        result.innerHTML= 'rock loses to paper';\r\n        lose();\r\n    } else if (userChoice === 'paper' && terminator === 'rock') {\r\n        result.innerHTML='paper beats rock';\r\n        win();\r\n    } else if (userChoice === 'paper' && terminator === 'paper') {\r\n        result.innerHTML='Draw';\r\n    } else if (userChoice === 'paper' && terminator === 'scissors') {\r\n        result.innerHTML='Paper loses to scissors';\r\n        lose();\r\n    } else if (userChoice === 'scissors' && terminator === 'rock') {\r\n        result.innerHTML='scissors loses to rock';\r\n        lose();\r\n    } else if (userChoice === 'scissors' && terminator === 'paper') {\r\n        result.innerHTML='scissors beats paper';\r\n        win();\r\n    } else if (userChoice === 'scissors' && terminator === 'scissors') {\r\n        result.innerHTML='Draw';\r\n\r\n   \r\n    }\r\n}\r\n\r\n//additional functions\r\nfunction win() {\r\n    let i= Number(document.getElementById('yourScore').innerHTML);\r\n    i++;\r\n    document.getElementById('yourScore').innerHTML = i;\r\n    maxScore();\r\n    \r\n    }\r\nfunction lose(){\r\n    let i= Number(document.getElementById('botScore').innerHTML);\r\n    i++;\r\n    document.getElementById('botScore').innerHTML = i;\r\n    maxScore();\r\n}\r\n","import React from 'react'; \r\nimport {RPS, RPSCapsule} from './v1functions.js'\r\nimport '../App.css';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    \r\n    <div className=\"content\">\r\n      <button type='button' id=\"startReset\" onLoad={RPSCapsule} onClick={RPSCapsule}>Start/Reset</button>\r\n      <button type='button' id=\"rock\" className=\"selection\" onClick={RPS} >Rock </button>\r\n      <button type='button' id=\"paper\" className=\"selection\" onClick={RPS}>Paper </button>\r\n      <button type='button' id=\"scissors\" className=\"selection\" onClick={RPS}>Scissors </button>\r\n      <div className=\"scoreBoard\">\r\n        <p id=\"yourScore\">0</p>\r\n        <p>:</p>\r\n        <p id=\"botScore\">0</p>\r\n      </div>\r\n      <p>You chose: <span id='yourChoice'></span></p><br />\r\n      <p>Machine chose: <span id='machine'></span> </p><br />\r\n      <br />\r\n      <p id=\"result\">Result: </p>\r\n\r\n      <p>The code behind the game is <a href=\"https://github.com/PCloherty/rock-paper-scissors\">available here</a>.</p>\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}","import React from 'react'; \r\nimport './App.css';\r\nimport {HashRouter as Router , Route, Link } from 'react-router-dom';\r\nimport RPSV2 from \"./v2files/v2component.js\";\r\nimport RPSV1 from \"./v1files/v1component.js\";\r\n\r\nexport default class RPSUI extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            version:\"\"\r\n        }\r\n    }\r\n    v1(e) {\r\n        this.setState({ version:{RPSV1}}); \r\n    }\r\n    v2(e) {\r\n        this.setState({ version:{RPSV2}}); \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Router>\r\n            \r\n                <button type='button' className=\"versionButton\" onClick={(e) => { this.v1(e)}}><Link to='/v1'>Version 1</Link></button>\r\n                <button type='button' className=\"versionButton\" onClick={(e) => { this.v2(e)}}><Link to='/v2'>Version 2</Link></button>\r\n                \r\n                <Route exact path = \"/v1\" component={RPSV1}/>\r\n                <Route exact path = \"/v2\" component={RPSV2}/>\r\n            </Router>\r\n            \r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}